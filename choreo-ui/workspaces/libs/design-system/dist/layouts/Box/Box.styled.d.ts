import { ComponentType, MouseEvent, ReactNode } from 'react';
export interface BoxProps {
    children?: ReactNode;
    className?: string;
    testId?: string;
    onClick?: (event: MouseEvent<HTMLDivElement>) => void;
    onMouseEnter?: (event: MouseEvent<HTMLDivElement>) => void;
    onMouseLeave?: (event: MouseEvent<HTMLDivElement>) => void;
    disabled?: boolean;
    backgroundColor?: string;
    height?: string | number;
    width?: string | number;
    display?: 'flex' | 'block' | 'inline-block' | 'grid' | 'inline-grid';
    flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';
    overflow?: 'visible' | 'hidden' | 'scroll' | 'auto';
    padding?: string | number;
    margin?: string | number;
    border?: 'small' | 'medium';
    borderBottom?: 'small' | 'medium';
    borderTop?: 'small' | 'medium';
    borderLeft?: 'small' | 'medium';
    borderRight?: 'small' | 'medium';
    borderColor?: string;
    borderRadius?: string | number;
    boxShadow?: string;
    cursor?: 'pointer' | 'default' | 'not-allowed';
    color?: string;
    transition?: string;
    minHeight?: string | number;
    maxHeight?: string | number;
    minWidth?: string | number;
    maxWidth?: string | number;
    flexGrow?: string | number;
    justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
    alignItems?: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
    position?: 'static' | 'relative' | 'absolute' | 'fixed' | 'sticky';
    gap?: string | number;
    zIndex?: string | number;
}
export declare const StyledBox: ComponentType<BoxProps>;
